% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_pointMap_function.R
\name{create_pointMap}
\alias{create_pointMap}
\title{A Point Map Creation Function}
\usage{
create_pointMap(
  dataframe,
  latitude_column,
  longitude_column,
  value_column,
  date_column,
  date_format = "\%Y-\%m-\%d",
  rgb_color_scheme = "[255,0,0]"
)
}
\arguments{
\item{dataframe}{Specify the name of the dataframe that you'd like to transform into a point map .bin file.}

\item{latitude_column}{Specify the column name (in quotes) that contains the latitudinal coordinates.}

\item{longitude_column}{Specify the column name (in quotes) that contains the longitudinal coordinates.}

\item{value_column}{Specify the column name (in quotes) that contains the primary value being visualized.}

\item{date_column}{Specify the column name (in quotes) that contains the date category.}

\item{date_format}{Specify format of the dates. The full set of format codes supported varies across platforms, because this function draws on Python it will call from the platform's C library's strftime() function, and platform variations are common. The date format codes required are the C standard (1989 version), and these work on all platforms with a standard C implementation. Note that the 1999 version of the C standard added additional format codes. The function defaults to "\%Y-\%m-\%d".}

\item{rgb_color_scheme}{Specify RGB  tuple of float values in a closed interval between 0 and 255. Defaults to "255,0,0" (i.e. - the color red).}
}
\description{
This function creates a point map from a dataframe. It will output a .bin file in your working directory for you to later push to a specific EarthTime instance.
}
\examples{
\dontrun{
create_pointMap <-  function(dataframe, latitude_column, longitude_column, value_column, date_column)
}
}
\keyword{map}
\keyword{point}
