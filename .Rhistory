message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EARTHTIME_CSV_LAYERS = key1)
#Sys.setenv(EARTHTIME_CSV_LAYERS = key2)
}
}
set_EarthTime_CSV_Layers("1234", "gisaa", install = TRUE)
set_EarthTime_CSV_Layers  <- function (key1, key2, overwrite = FALSE, install = FALSE) {
if (install) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if (file.exists(renv)) {
file.copy(renv, file.path(home, ".Renviron_backup"))
}
if (!file.exists(renv)) {
file.create(renv)
}
else {
if (isTRUE(overwrite)) {
message("Your original .Renviron will be backed up and stored in your R HOME directory if needed.")
oldenv1 = read.table(renv, stringsAsFactors = FALSE)
newenv1 <- oldenv1[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv1), ]
write.table(newenv1, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
oldenv2 = read.table(renv, stringsAsFactors = FALSE)
newenv2 <- oldenv2[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv2), ]
write.table(newenv2, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
}
else {
tv <- readLines(renv)
if (any(grepl("EarthTime_CSV_Layers_spreadsheetId", tv))) {
stop("An EarthTime CSV Layers spreadsheet entry already exists. You can overwrite it with the argument overwrite=TRUE", call. = FALSE)
}
}
}
keyconcat1 <- paste0("\nEarthTime_CSV_Layers_spreadsheetId='", key1, "'")
write(keyconcat1, renv, sep = "\n", append = TRUE)
keyconcat2 <- paste0("EarthTime_CSV_layers_sheetId='", key2, "'")
write(keyconcat2, renv, sep = "\n", append = TRUE)
message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Congratulations! Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId = key1)
Sys.setenv(EarthTime_CSV_layers_sheetId = key2)
}
}
set_EarthTime_CSV_Layers("1234", "gisaa", install = TRUE)
set_EarthTime_CSV_Layers  <- function (key1, key2, overwrite = FALSE, install = FALSE) {
if (install) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if (file.exists(renv)) {
file.copy(renv, file.path(home, ".Renviron_backup"))
}
if (!file.exists(renv)) {
file.create(renv)
}
else {
if (isTRUE(overwrite)) {
message("Your original .Renviron will be backed up and stored in your R HOME directory if needed.")
oldenv1 = read.table(renv, stringsAsFactors = FALSE)
newenv1 <- oldenv1[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv1), ]
write.table(newenv1, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
oldenv2 = read.table(renv, stringsAsFactors = FALSE)
newenv2 <- oldenv2[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv2), ]
write.table(newenv2, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
}
else {
tv <- readLines(renv)
if (any(grepl("EarthTime_CSV_Layers_spreadsheetId", tv))) {
stop("An EarthTime CSV Layers spreadsheet entry already exists. You can overwrite it with the argument overwrite=TRUE", call. = FALSE)
}
}
}
keyconcat1 <- paste0("\nEarthTime_CSV_Layers_spreadsheetId='", key1, "'")
write(keyconcat1, renv, sep = "\n", append = TRUE)
keyconcat2 <- paste0("EarthTime_CSV_layers_sheetId='", key2, "'")
write(keyconcat2, renv, sep = "\n", append = TRUE)
message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Congratulations! Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId = key1)
Sys.setenv(EarthTime_CSV_layers_sheetId = key2)
}
}
set_EarthTime_CSV_Layers("1234", "gisaa", install = TRUE)
set_EarthTime_CSV_Layers  <- function (key1, key2, overwrite = FALSE, install = FALSE) {
if (install) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if (file.exists(renv)) {
file.copy(renv, file.path(home, ".Renviron_backup"))
}
if (!file.exists(renv)) {
file.create(renv)
}
else {
if (isTRUE(overwrite)) {
message("Your original .Renviron will be backed up and stored in your R HOME directory if needed.")
oldenv1 = read.table(renv, stringsAsFactors = FALSE)
newenv1 <- oldenv1[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv1), ]
write.table(newenv1, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
oldenv2 = read.table(renv, stringsAsFactors = FALSE)
newenv2 <- oldenv2[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv2), ]
write.table(newenv2, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
}
else {
tv <- readLines(renv)
if (any(grepl("EarthTime_CSV_Layers_spreadsheetId", tv))) {
stop("An EarthTime CSV Layers spreadsheet entry already exists. You can overwrite it with the argument overwrite=TRUE", call. = FALSE)
}
}
}
keyconcat1 <- paste0("\nEarthTime_CSV_Layers_spreadsheetId='", key1, "'")
write(keyconcat1, renv, sep = "\n", append = TRUE)
keyconcat2 <- paste0("EarthTime_CSV_Layers_sheetId='", key2, "'")
write(keyconcat2, renv, append = TRUE)
message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Congratulations! Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId = key1)
Sys.setenv(EarthTime_CSV_Layers_sheetId = key2)
}
}
set_EarthTime_CSV_Layers("1234", "gisaa", install = TRUE)
set_EarthTime_CSV_Layers  <- function (key1, key2, overwrite = FALSE, install = FALSE) {
if (install) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if (file.exists(renv)) {
file.copy(renv, file.path(home, ".Renviron_backup"))
}
if (!file.exists(renv)) {
file.create(renv)
}
else {
if (isTRUE(overwrite)) {
message("Your original .Renviron will be backed up and stored in your R HOME directory if needed.")
oldenv1 = read.table(renv, stringsAsFactors = FALSE)
newenv1 <- oldenv1[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv1), ]
write.table(newenv1, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
oldenv2 = read.table(renv, stringsAsFactors = FALSE)
newenv2 <- oldenv2[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv2), ]
write.table(newenv2, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
}
else {
tv <- readLines(renv)
if (any(grepl("EarthTime_CSV_Layers_spreadsheetId", tv))) {
stop("An EarthTime CSV Layers spreadsheet entry already exists. You can overwrite it with the argument overwrite=TRUE", call. = FALSE)
}
}
}
keyconcat1 <- paste0("EarthTime_CSV_Layers_spreadsheetId='", key1, "'")
write(keyconcat1, renv, sep = "\n", append = TRUE)
keyconcat2 <- paste0("EarthTime_CSV_Layers_sheetId='", key2, "'")
write(keyconcat2, renv, sep = "\n", append = TRUE)
message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Congratulations! Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId = key1)
Sys.setenv(EarthTime_CSV_Layers_sheetId = key2)
}
}
set_EarthTime_CSV_Layers("1234", "gisaa", install = TRUE)
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId)
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId)
set_EarthTime_CSV_Layers()
set_EarthTime_CSV_Layers  <- function (key1, key2, overwrite = FALSE, install = FALSE) {
if (install) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if (file.exists(renv)) {
file.copy(renv, file.path(home, ".Renviron_backup"))
}
if (!file.exists(renv)) {
file.create(renv)
}
else {
if (isTRUE(overwrite)) {
message("Your original .Renviron will be backed up and stored in your R HOME directory if needed.")
oldenv1 = read.table(renv, stringsAsFactors = FALSE)
newenv1 <- oldenv1[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv1), ]
write.table(newenv1, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
oldenv2 = read.table(renv, stringsAsFactors = FALSE)
newenv2 <- oldenv2[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv2), ]
write.table(newenv2, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
}
else {
tv <- readLines(renv)
if (any(grepl("EarthTime_CSV_Layers_spreadsheetId", tv))) {
stop("An EarthTime CSV Layers spreadsheet entry already exists. You can overwrite it with the argument overwrite=TRUE", call. = FALSE)
}
}
}
keyconcat1 <- paste0("EarthTime_CSV_Layers_spreadsheetId='", key1, "'")
write(keyconcat1, renv, sep = "\n", append = TRUE)
keyconcat2 <- paste0("EarthTime_CSV_Layers_sheetId='", key2, "'")
write(keyconcat2, renv, sep = "\n", append = TRUE)
message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Congratulations! Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId = key1)
Sys.setenv(EarthTime_CSV_Layers_sheetId = key2)
}
}
set_EarthTime_CSV_Layers()
set_EarthTime_CSV_Layers("1walgLKJooOOk0MDpXCni8tgSKMncgZQDWER3H4SoosA", "870361385", overwrite = TRUE)
set_EarthTime_CSV_Layers  <- function (key1, key2, overwrite = FALSE, install = FALSE) {
if (install) {
home <- Sys.getenv("HOME")
renv <- file.path(home, ".Renviron")
if (file.exists(renv)) {
file.copy(renv, file.path(home, ".Renviron_backup"))
}
if (!file.exists(renv)) {
file.create(renv)
}
else {
if (isTRUE(overwrite)) {
message("Your original .Renviron will be backed up and stored in your R HOME directory if needed.")
oldenv1 = read.table(renv, stringsAsFactors = FALSE)
newenv1 <- oldenv1[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv1), ]
write.table(newenv1, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
oldenv2 = read.table(renv, stringsAsFactors = FALSE)
newenv2 <- oldenv2[-grep("EarthTime_CSV_Layers_spreadsheetId", oldenv2), ]
write.table(newenv2, renv, quote = FALSE, sep = "\n", col.names = FALSE, row.names = FALSE)
}
else {
tv <- readLines(renv)
if (any(grepl("EarthTime_CSV_Layers_spreadsheetId", tv))) {
stop("An EarthTime CSV Layers spreadsheet entry already exists. You can overwrite it with the argument overwrite=TRUE", call. = FALSE)
}
}
}
keyconcat1 <- paste0("EarthTime_CSV_Layers_spreadsheetId='", key1, "'")
write(keyconcat1, renv, sep = "\n", append = TRUE)
keyconcat2 <- paste0("EarthTime_CSV_Layers_sheetId='", key2, "'")
write(keyconcat2, renv, sep = "\n", append = TRUE)
message("Your EarthTime CSV Layers Sheet has been stored in your .Renviron and can be accessed by Sys.getenv(\"EARTHTIME_CSV_LAYERS\"). \nTo use now, restart R or run `readRenviron(\"~/.Renviron\")`")
confirmation <- paste0("Congratulations! Your EarthTime CSV layers sheet, 'https://docs.google.com/spreadsheets/d/", key1, "/edit#gid=", key2, "' has been written into your .Renviron")
return(confirmation)
}
else {
message("To install your default EarthTime CSV Layers spreadsheet for use in future sessions, run this function with `install = TRUE`.")
Sys.setenv(EarthTime_CSV_Layers_spreadsheetId = key1)
Sys.setenv(EarthTime_CSV_Layers_sheetId = key2)
}
}
set_EarthTime_CSV_Layers("1walgLKJooOOk0MDpXCni8tgSKMncgZQDWER3H4SoosA", "870361385", overwrite = TRUE)
set_EarthTime_CSV_Layers("1walgLKJooOOk0MDpXCni8tgSKMncgZQDWER3H4SoosA", "870361385", overwrite = TRUE, install = TRUE)
test <- read.csv("C:/Users/ABERK/OneDrive - World Economic Forum/Desktop/bilateral_remittances_2010-2017_long_format_v3.csv")
View(test)
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", projected_coordinate_system = "epsg_3857", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
path <- paste(system.file("python",package="EarthTimeR"), "dotmap_via_reticulate.py", sep="/")
reticulate::source_python(path)
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, projected_coordinate_system, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
setwd("C:\Users\ABERK\Box\The_Definitive_ABERK_Data_Science_Folder\EarthTimeR\inst\python")
setwd("C:\Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/EarthTimeR/inst/python")
setwd("C:\Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/EarthTimeR/inst/python/")
setwd("C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/EarthTimeR/inst/python/")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", projected_coordinate_system = "epsg_3857", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
path <- paste(system.file("python",package="EarthTimeR"), "dotmap_via_reticulate.py", sep="/")
reticulate::source_python(path)
#process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, projected_coordinate_system, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", projected_coordinate_system = "epsg_3857", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python(path)
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, projected_coordinate_system, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", projected_coordinate_system = "epsg_3857", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python(path)
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, projected_coordinate_system, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", projected_coordinate_system = "epsg_3857", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, projected_coordinate_system, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
setwd("C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/EarthTimeR/inst/python/")
test <- read.csv("C:/Users/ABERK/OneDrive - World Economic Forum/Desktop/bilateral_remittances_2010-2017_long_format_v3.csv")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
#process_row("row", projected_coordinate_system)
create_python_flowmap(dataframe, origin, destination, value_column, date_column, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
#process_row("row", projected_coordinate_system)
create_python_flowmap(obj_name, origin, destination, value_column, date_column, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
#process_row("row", projected_coordinate_system)
create_python_flowmap(obj_name, origin, destination, value_column, date_column, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
#process_row("row", projected_coordinate_system)
create_python_flowmap(obj_name, origin, destination, value_column, date_column, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .BIN file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
reticulate::py_last_error()
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, projected_coordinate_system = "epsg_3857", centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
#process_row("row", projected_coordinate_system)
create_python_flowmap(obj_name, origin, destination, value_column, date_column, projected_coordinate_system, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .json file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, projected_coordinate_system = "epsg_3857", centroids_geojson = "country-centroids.geojson", centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
#process_row("row", projected_coordinate_system)
create_python_flowmap(obj_name, origin, destination, value_column, date_column, projected_coordinate_system, centroids_geojson, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .json file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year", output_dir = "C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, projected_coordinate_system = "epsg_3857", centroids_geojson = "country-centroids.geojson", centroids_json = "centroids_by_iso_alpha_3.json", output_dir = "getwd()"){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
create_python_flowmap(obj_name, origin, destination, value_column, date_column, projected_coordinate_system, centroids_geojson, centroids_json, output_dir = getwd())
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .json file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year", output_dir = "C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/")
create_flowMap <-  function(dataframe, origin, destination, value_column, date_column, projected_coordinate_system = "epsg_3857", centroids_geojson = "country-centroids.geojson", centroids_json = "centroids_by_iso_alpha_3.json", output_dir = getwd()){
obj_name = deparse(substitute(dataframe))
write.csv(dataframe, paste0(obj_name, ".csv"), row.names = FALSE, na = "")
#The moment it clicked: http://www.mjdenny.com/R_Package_Pictorial.html
#path <- paste(system.file("python",package="EarthTimeR"), "flowmap_via_reticulate.py", sep="/")
reticulate::source_python("flowmap_via_reticulate.py")
create_python_flowmap(obj_name, origin, destination, value_column, date_column, projected_coordinate_system, centroids_geojson, centroids_json, output_dir)
invisible(file.remove(paste0(obj_name, ".csv")))
cat(crayon::green$bold("\nCONGRATULATIONS:" , crayon::reset(" The dataframe for" , crayon::bgYellow(obj_name , crayon::reset(" has been converted into a .json file and is ready to be pushed to your EarthTime instance via the terminal!\n\n")))))
}
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year", output_dir = "C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder/")
create_flowMap(test, "Seller", "Buyer", "TIV.delivery.values", "Delivery.year")
.rs.restartR()
library("devtools")
library("roxygen2")
setwd("C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder")
setwd("./EarthTimeR")
document()
library("devtools")
library("roxygen2")
setwd("C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder")
setwd("./EarthTimeR")
document()
library("devtools")
library("roxygen2")
setwd("C:/Users/ABERK/Box/The_Definitive_ABERK_Data_Science_Folder")
setwd("./EarthTimeR")
document()
?cbind
c(2002, 2007, 2011, 2013, 2019)
test<-c(2002, 2007, 2011, 2013, 2019)
test
